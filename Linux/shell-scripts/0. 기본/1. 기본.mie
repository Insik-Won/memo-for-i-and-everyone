■ 1. 기본

◎ 참조
  - <link path="https://mug896.github.io/bash-shell/basics.html" contents="Basics"/>

◎ 기본
  - 명령의 기본적인 구조는 다음과 같다.
    - command arg1 arg2 arg3 ...
    - 대입 연산은 유일하게 위 명령 구조를 따르지 않는다. "변수=대입값"을 공백 없이 붙여 사용한다.
    - 명령/인자를 구분하는 기준은 공백문자이다. 정확히는 IFS(Internal Field Sepeartor, 기본적으로 공백문자)로 정해진다. IFS는 $IFS 변수를 통해 확인할 수 있다.
  - 쉘에서 세미콜론(;)을 통해 한 줄의 여러 명령을 구분할 수 있다. 또한 '{}'를 통해 그루핑을 할 떄는 필수적이다.
  - 쉘 메타문자는 shell에서 특별하게 취급된다. 그래서 공백의 제약 없이 자유롭게 사용할 수 있다.
  - 쉘에서 제공하는 키워드, 메타문자, glob 문자를 문자 그대로 쓸려면, 따옴표나 백슬래쉬(\)를 사용해 이스케이핑해 기능을 무효화할 수 있다.
  - 쉘에서 파일을 정할 때 glob 문자(*,?,[])를 이용해 하나의 문자열을 glob에 매칭되는 여러 문자열로 확장시킬 수 있다.

◎ 명령의 옵션
  - 명령 옵션은 보통 -와 --로 시작한다.
  - '--'를 사용해 옵션의 종료를 나타낼 수 있다.

  - '-o'는 짧은 형태로 문자 하나를 사용한ㅁ.
    - 값 지정은 '-o value'와 같이 한다. 
    - 여러 문자를 합쳐 여러 옵션을 나타낼 수도 있다. (-axjf)
  - '--option'은 긴 형태로 문자열을 사용하며 
    - 값 지정은 '--option=value'와 같이 한다.
    - 이름을 통해 옵션의 의미를 알기가 쉽다.

  - 옵션은 기본적으로 인자이며, 옵션과 인자의 구분은 명령어의 몫이다. 위 내용은 명령어 대다수가 따르는 옵션 처리 방식이다.

◎ 종료 상태값
  - 명령이 끝나고 명령의 결과를 나타내는 값이다.
  - 0은 성공, 0 이외의 값은 실패를 뜻한다.
  - 명령의 종료상태값은 특수변수인 $?로 알 수 있다.
  - if문에서 참/거짓을 종료상태값으로 판별한다.
  - 쉘 함수의 종료상태값은 return 명령으로 정할 수 있다.

◎ $ 문자를 이용한 확장
  - 쉘에서 $ 문자를 이용한 확장은 3가지 종료가 있다.
    - ${ }를 사용한 매개변수 확장: $AA, ${AA}, ${AA:-5}, ${AA%.*} ...
    - $(( ))를 사용한 산술 확장: $((1 + 2)) ...
    - $( )를 사용한 명령 치환: $(echo "1 + 3" | bc) ...

◎ 주석
  - 쉘에서 주석은 # 문자를 사용한다. 단 # 문자가 단어 안에 사용되었다면 주석으로 처리되지 않는다.
  - 이스케이핑이나 따옴표로 주석 처리를 방지할 수 있다.

◎ 표준 입출력을 나타내는 '-'
  - 명령어 중에서 '-'는 표준 입출력을 나타내기도 한다.
  - 이것 또한 옵션과 같이 기본적으로 인자이다.
