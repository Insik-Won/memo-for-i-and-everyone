■ 프로세스 치환

◎ 참조
  - <link path="https://mug896.github.io/bash-shell/exp_and_sub/process_substitution.html" contents="Process Substitution"/>

◎ 개요
  - <(...), >(...)
  - 프로세스 치환은 기존에 명령의 인수로 파일을 사용하던 곳에 사용할 수 있다. 따라서 별도의 파일을 생성하지 않아도 되는 편리한 기능이다.
  - 프로세스 치환은 데이터가 파이프를 통해 전달되므로 일반 파일과 달리 랜덤 접근을 할 수 없기 때문에 프로그램 내에서 seek을 하거나 직접 파일 타입을 체킹하는 경우 실행되지 않을 수도 있다.
  - 파이프가 가지는 방향성을 >, < 문자를 이용해 표시하는 named pipe 파일이라고 생각하면 된다.
  - 하위 쉘에서 실행되며 리디렉션에도 사용할 수 있다.
  - 리디렉션의 경우, 현재 쉘의 표준입력/표준출력이 프로세스 치환 하위 쉘의 표준출력/표준입력과 이어진다고 보면 된다.
  - 파이프로 연결된 모든 명령은 각자의 하위 쉘에서 실행되어 부모 변수에 연산결과를 저장할 수 없다. 이때 프로세스 치환을 이용하면 그 문제를 해결할 수가 있다.
  
  - sudo 명령에서는 사용할 수 없다. 
    - sudo 명령은 stdin, stdout, stderr을 제외한 모든 파일 지시자를 닫은 뒤 명령문을 실행하는데, 프로세스 치환은 먼저 bash에 의해 해석된 후에 파일 지시자 형태로 sudo 명령에 전달되기 때문이다.

◎ 특징
  - 프로세스 치환에서 실행하는 명령은 asynchronous, non-interactive, non-job 프로세스가 된다.
    - 1. 백그라운드 프로세스처럼 메인 프로세스와 별개로 실행하는 비동기 프로세스이다. 따라서 메인 프로세스가 먼저 종료될 수 있다.
    - 2. non-interactive 프로세스이기에 터미널에서 read할 수 없다.
    - 3. job 프로세스가 아니여서 job table에 등록하지 않는다.
  - 표현식 내 명령은 백그라운드 프로세스로 실행한다.
  - 메인 프로세스와 PGID가 다르다.
