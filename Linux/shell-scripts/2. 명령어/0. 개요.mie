■ 명령어 개요

◎ 참조
  - <link path="https://mug896.github.io/bash-shell/commands.html" contents="명령의 구분"/>

◎ 명령의 구분
  - 외부 명령
    - /usr/bin/find 명령과 같이 시스템 디렉토리에 위치한 명령이다.
    - ELF 바이너리 실행파일 뿐만 아니라 쉘 스크립트와 펄 스크립트, 파이썬 스크립트와 같은 텍스트 실행파일도 포함되어 있다.
    - GNU coreutils 패키지에는 textutils, shellutils, fileutils 명령들이 포함되어 있다.

  - 내장 명령
    - 쉘에 내장되서 제공되는 명령(shell builtins)으로 실행을 위해 새로 프로세스를 만들지 않아도 되서 외부 명령에 비해 좀더 효율적으로 실행할 수 있다.
    - 쉘 내부 상태정보를 조회, 변경하는 등의 기능을 한다.
    - echo, printf, test, [, true, false, kill, pwd 같은 명령은 동일한 기능을 하는 외부 명령이 중복되어 존재한다. 이는 쉘 환경이 아닌 경우에도 사용할 수 있게 하기 위해서이다.
    - compgen -b 명령으로 내장 명령들을 확인할 수 있다.

  - 키워드
    - 키워드는 대부분 복합 명령문을 작성할 때 사용한다. 
    - compgen -k 명령으로 쉘 키워드를 확인할 수 있다.
    
  - 함수
    - 쉘에서 사용자는 임의로 원하는 쉘 함수를 만들어 사용할 수 있다. 함수명은 외부 명령, 내장 명령과 동일하게 사용된다.
    - declare -F 명령으로 현재 쉘에 설정된 함수를 볼 수 있다.

  - 별칭
    - 앞에 소개한 명령을 별칭(aliases)으로 만들어 사용할 수 있다. 쉘 키워드도 별칭으로 만들어 사용할 수 있을 정도로 우선순위가 제일 높다.
    - non-interactive 쉘인 스크립트 파일 실행 시 기본적으로 비활성화된다.

◎ 명령 중복
    - 명령을 찾는 우선순위는 별칭, 키워드, 함수, 내장명령, 외부명령 순이다.
    - type -a 명령으로 우선순위가 높은 명령을 차례대로 표시할 수 있다.
    - 명령 이름 중복 문제가 생길 수도 있는데 쉘은 이를 해결할 수 있는 명령을 다음과 같이 제공한다.
      - command: 우선순위가 높은 별칭, 키워드, 함수 이름을 피해 외부명령, 내장명령을 실행한다.
      - builtin: 우선순위가 높은 별칭, 함수 이름을 피해 내장 명령을 실행하기 위해 사용한다.
      - enable: 내장 명령을 비활성화해 외부 명령을 실행하기 위해 사용한다.
    - 별칭과 키워드는 앞에 '\'를 붙여 이스케이프하거나 따옴표로 감싸 해당 기능을 비활성화해, 함수/내장명령/외부명령을 실행할 수 있다.

◎ 명령줄 개념
  - find 명령의 -exec 액션이나 xargs, sudo 같은 명령들은 자체 명령도 실행하지만 입력받은 하위 명령도 실행한다. 이떄 파이프나 리디렉션을 사용하면 자체 명령에 적용되는지 하위 명령에 적용되는지에 대한 문제가 생긴다.
  - 파이프나 리디렉션은 자체 명령에 적용된다. 하위 명령에 적용하려면 sh/bash -c "명령"을 통해 적용할 수 있다.
  - 파이프나 리디렉션은 현재 명령행 사용자의 권한을 사용한다. 그래서 sudo를 통해 관리자 권한으로 파이프/리디렉션을 하려면 sudo sh/bash -c "명령"을 통해 해야한다.

◎ 도움말 문서 보는 법
  - 내장 명령의 도움말 문서를 보려면 help 내장 명령을 이용한다.
    - 명령 사용법에 나타나는 [...] 부분은 옵션을 의미한다. 해당 부분을 포함할 수도, 안할 수도 있다.
  - 외부 명령의 도움말 문서를 보려면 man, info 명령이 이용한다.

◎ man 명령어
  - man command
  - man section command
  - man page(manual page)는 Unix에서 전통적으로 사용해온 문서 형식으로 외부 명령의 도움말 뿐만 아니라 프로그래밍에 사용하는 함수의 도움말도 볼 수가 있다. 
  - 페이지 뒤에 숫자를 붙여 섹션별로 구분을 한다. 섹션 번호를 주지 않고, 이름이 중복되면 번호가 낮은 순서로 보여준다.
    - {섹션 번호, 설명, 예제}
    ---
    - {1, 사용자 명령, man grep}
    - {2, 시스템 콜, man 2 write}
    - {3, C 라이브러리 함수, man 3 printf}
    - {4, 장치와 특수 파일 (보통 /dev에 있는 파일), man 4 tty}
    - {5, 파일 형식과 convention (예. etc/passwd, /etc/crontab), man 5 proc}
    - {6, 게임}
    - {7, 기타 (매크로 패키지와 convention 포함), man 7 signal 혹은 man 7 hier}
    - {8, 시스템 관리 도구와 대몬(보통 root 사용자 전용)}

  - man -f page: 헤당 페이지가 속한 섹션들을 짧은 설명과 함께 볼 수 있다.
  - man -k regex: 페이지 이름과 설명에서 단어를 검색할 수 있다.
  - man 명령을 사용할 떄 tab 자동완성을 사용할 수 있다.
