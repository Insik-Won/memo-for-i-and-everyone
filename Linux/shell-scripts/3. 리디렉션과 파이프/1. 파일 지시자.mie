■ 파일 지시자

◎ 참조
  - <link contents="File Descriptors" path="https://mug896.github.io/bash-shell/file_descriptors.html"/>

◎ 개요
  - 프로그램이 실행 중에 사용하는 파일이나 파이프, 소켓, 외부 장치 같은 리소스는 처음 사용할 때 OS에 의해 리소스 번호를 할당받는다. 이 번호는 양의 정수로 프로세스마다 가지고 있는 PCB(Process Control Block, 프로세스에 관한 모든 정보를 담고 있다.)의 file descriptor table에 등록되고, 이 번호로 해당 리소스를 불러와 처리할 수 있다.

◎ 파일 지시자의 생성, 복사, 삭제
  - 터미널을 열면 자동으로 생성되는 파일지시자 0,1,2번 외에 필요하면 다른 번호의 파일 지시자를 생성, 복사, 삭제할 수 있다.
    - 파일 지시자를 생성하는 것은 실제 파일을 open하는 것과 같고
    - 파일 지시자를 복사하는 것은 기존에 생성한 파일 지시자를 백업하는 것과 같고
    - 파일 지시자를 삭제하는 것은 파일을 close하는 것과 같다.
  - 이와 같은 작업은 exec 명령으로 하며, 사용가능한 번호의 범위는 ulimit -n이다.
    - sh에서는 9번까지만 사용할 수 있다.
  - 파일 지시자를 설정할 때 사용하는 메타문자
    - 입력: <
    - 출력: > (연결 시 기존 파일 내용이 삭제된다.)
    - 추가출력: >> (연결 시 기존 파일 내용이 삭제되지 않고 끝에서부터 데이터가 추가된다.)
    - 입출력: <> (이 기호는 <+>와 같지만, 기존 파일 내용은 삭제되지 않고 출력 시 첫 줄부터 덮어쓰게 된다.)
  - 위 메타문자의 방향성은 실제 리소스와 연결할 때만 의미를 갖는다. 이후 파일지시자끼리 서로 복사하거나 삭제할 때는 방향성이 무시된다.
  - 파일 지시자 설정을 할 때 파일지시자와 리소스를 위치하는 방법은 다음과 같다.
    - 왼쪽: 새로 생성, 복사, 삭제되는 파일지시자
    - 오른쪽: 실제 리소스, 원본 파일지시자, -(왼쪽 지시자 삭제)

◎ 파이프와 소켓
  - 쉘에서 파일 지시자를 파이프나 소켓에 연결하면 읽어들일 데이터가 없어도 연결을 유지할 수 있다.
  - <code>
    # 바로 소켓에 메세지를 보내면 연결이 유지되지 않는다.
    $ echo hello > /dev/tcp/www.google.com/80

    $ ls -l /proc/$$/fd
    total 0
    lrwx------ 1 mug896 mug896 64 08.19.2015 18:37 0 -> /dev/pts/18
    lrwx------ 1 mug896 mug896 64 08.19.2015 18:37 1 -> /dev/pts/18
    lrwx------ 1 mug896 mug896 64 08.19.2015 18:37 2 -> /dev/pts/18

    # 파일 지시자를 사용하면 소켓의 연결이 유지된다.
    $ exec 3<> /dev/tcp/www.google.com/80

    $ ls -l /proc/$$/fd
    total 0
    lrwx------ 1 mug896 mug896 64 08.19.2015 18:37 0 -> /dev/pts/18
    lrwx------ 1 mug896 mug896 64 08.19.2015 18:37 1 -> /dev/pts/18
    lrwx------ 1 mug896 mug896 64 08.19.2015 18:37 2 -> /dev/pts/18
    lrwx------ 1 mug896 mug896 64 08.19.2015 18:37 3 -> socket:[5641570]
  - </code>

 ◎ 파일 지시자와 변수
  - 파일 지시자는 단순히 번호로 되어있어서 사람이 사용하기에 어렵다는 단점이 있다. 이때 파일 지시자 번호를 변수에 대입해서 사용하면 된다. 대신 리디렉션 기호과 그 왼쪽값은 같이 해석되므로 기본적으로 변수를 사용할 수 없고 eval 명령과 따옴표를 사용해야 한다. 오른값에는 변수표현이 와도 된다.
  - 이름있는 파일지시자(named file descriptor)는 bash에서 제공하는 기능으로 FD 번호를 생성할 때 현재 어떤 번호가 사용되는지 확인할 필요 없이 자동으로 생성해 변수에 할당해주는 기능이다. 이름있는 파일지시자는 일반 변수처럼 사용할 수 있으며
    - 생성할 때와 삭제할 때처럼 리디렉션 기호 왼쪽에 붙여쓸 경우 변수 이름에 { }를 사용한다.
    - <code>
      $ exec {myFD}> outfile
      $ echo $myFD
      10
    - </code>
