■ etc

◎ 참조
  - <link contents="etc" path="https://mug896.github.io/bash-shell/etc.html"/>

◎ /proc
  - 위 디렉토리는 현재 시스템에서 실행되는 프로세스에 대한 정보를 제공하기 위해 운영체제어세 제공하는 가상의 파일 시스템이다.
  - 각각의 파일은 커널 내부의 특정 함수와 연결되어 있어서 read하면 실시간으로 해당 정보가 표시된다.
  - 여러가지 시스템 관련 정보도 /proc을 통해 제공하고 있고 커널 매개변수 값을 write를 통해 변경할 수도 있다.
  - /proc/[pid] 디렉토리에 해당 프로세스의 정보를 볼 수 있다.
  - /proc/self는 심볼릭 링크인데 항상 프로세스 자신의 PID 번호에 연결되어 있다. /dev 디렉토리에 존재하는 fd, stdin, stodut, stderr 모두 /proc/self와 연결된 링크로 쉘 스크립트를 작성할 때 유용하게 사용할 수 있다.

◎ /sys
  - /sys 디렉토리는 /proc 이후에 생긴 가상 파일 시스템이다. 원래 /proc은 프로세스 정보와 ps, top, free 같은 몇몇 시스템 유틸리티가 사용하는 정보를 제공하는 게 목적이였으나, 사용상의 이점으로 인해 무작위로 정보를 제공하다보니 일종의 정보 쓰레기장이 되어서, 나중에 장치/시스템 관련 정보를 구조적으로 제공하기 위해 만든 디렉토리가 /sys 디렉토리다. 기존 legacy 시스템 정보는 /proc을 통해 접근할 수 있으나 새로 추가되는 장치/시스템 관련 정보를 /sys를 통해 제공한다.

◎ /dev
  - /proc은 커널이 가지고 있는 프로세스와 시스템 관련 정보를 사용자에게 제공하는 게 목적이라면, /dev 디렉토리는 커널이 관리하는 장치를 사용자에게 제공하는 것이 목적이다.
  - 이 디렉토리는 /proc과 달리 가상의 파일 시스템이 아니고 mknod 명령으로 직접 장치파일을 만들 수 있다. 생성된 장치는 꼭 /dev 디렉토리에 위치할 필요는 없고 일반 파일과 똑같이 취급해도 된다.
  - /dev 디렉토리를 ls해보면 파일 사이즈 대신 두개의 숫자가 ','로 구분되있는 걸 볼 수 있다. 각각 major number, minor number로 major number는 장치 드라이버를, minor number는 같은 드라이버를 사용하는 장치를 구분하기 위한 숫자이다.

◎ Character device
  - Character device는 데이터가 1바이트 크기의 문자가 연속해서 전달되고 무작위 접근을 할 수 없는 장치이다. 데이터가 전달될 때 커널이 사용하는 버퍼를 거치지않고 바로 장치에 전달된다.
  - 키보드, 마우스도 사실 character device고 디스크와 관련한 장치를 제외하고 대부분이 character device이다.
    - 마우스: /dev/input/
    - 그래픽: /dev/dri/
    - 사운드: /dev/snd/
    - 터미널: /dev/tty*, /dev/pts/*
  - /dev/tty는 프로세스의 controlling terminal과 동일하다. 현재 ctty가 /dev/pts/1이라면 /dev/tty도 /dev/pts/1과 같다고 할 수 있다. 어떤 프로세스가 /dev/tty를 open하는데 실패했다면, 그 프로세스는 ctty를 갖고 있지 않다고 할 수 있다. 표준 스트림이 리디렉션되어있어도 /dev/tty로 직접 터미널에 입출력할 수 있다.

◎ Block device
  - 하드디스크, CD-ROM, USB 메모리와 같이 무작위 접근을 할 수 있는 장치가 block device에 해당한다.
  - block device는 커널이 관리하는 버퍼를 이용하고 block 단위(보통 512바이트)로 데이터가 전달된다.
  - character device와 block device는 내부적으로 처리하는 방식이 다르기 때문에 하나의 물리 장치가 두가지 장치파일을 제공하기도 한다.
  - 또한 버퍼 캐시를 이용하는 것이 실제 데이터가 장치에 쓰여지는 순서나 가시성에 영향을 줄 수도 있다고 하여 아에 character device만 제공하는 운영체제도 있다.
    - 하드디스크: /dev/sda[번호]
    - 램디스크를 만들 떄: /dev/ram[번호]
    - iso 이미지 파일을 mount할 때: /dev/loop[번호]
  
◎ Pseudo device
  - Pseudo device는 실제 물리 장치에 연결되어있는 것은 아니고 커널에서 제공하는 하나의 기능으로 보면 된다. 대표적으로 /dev/null이 있다.
  - /dev/null: 이 장치에 쓰기를 할 경우 입력하는 데이터는 모두 사라지고 쓰기 성공이 반환된다. 블랙홀과 같은 존재로, 보통 명령 실행 시 원하지 않는 데이터를 보내는 데 사용한다. 읽을 경우에는 EOF를 반환한다.
  - /dev/zero: 읽을 경우 연속된 NUL 문자가 제공된다. 보통 데이터 스토리지를 초기화할 때 사용한다. 쓰기를 할 경우 /dev/null과 같이 블랙홀 역할을 한다.
  - /dev/urandom: 연속된 무작위의 수를 제공한다.
  - /dev/full: 이 장치에 쓰기를 할 경우 항상 ENOSPC(No space left on device) 오류 코드를 반환한다. 보통 프로그램에서 디스크 full 상태를 테스트할 때 사용한다. 읽을 경우 연속된 NUL 문자를 제공한다.
