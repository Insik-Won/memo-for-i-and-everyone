■ 쉘 특별변수

◎ 참조
  - <link path="https://mug896.github.io/bash-shell/shell_variables.html" contents="Bourne Shell Variables"/>
  - <link path="https://mug896.github.io/bash-shell/positional_parameters.html" contents="Positional Parameters"/>
  - <link path="https://mug896.github.io/bash-shell/special_parameters.html" contents="Special Parameters"/>

◎ 위치 매개변수
  - 스크립트 파일을 실행하거나, source하거나 함수를 호출할 때, 인수를 주면 해당 스크립트/함수 내에 위치 매개변수가 자동으로 설정된다. 
  - 첫번째 인수는 $1, 두번쨰는 $2 ... 식으로 할당하며 두자리 이상일 경우 { }를 사용해야 한다. scope는 local이다.
  - sh와 같이 array를 사용할 수 없는 환경에서 사용할 수 있다.
  - 부분 문자열 확장을 사용할 수 있다.
  - 위치 매개변수의 구분은 $IFS 변수로 이뤄진다.

  - 위치 매개변수 목록
    - $0: 스크립트 파일 이름을 나타내며 쉘 함수에서는 쉘 실행파일명이 된다.
      - 명령을 다른 이름으로 심볼릭/하드 링크한 후 링크 이름으로 실행하면 $0의 값은 링크 이름이 된다.
    - $1, $2, $3 ...: 각 인수를 나타낸다.
    - $#: $0을 제외한 전체 인수의 개수가 된다.
    - $@, $*: 위치 매개변수 전부를 나타낸다. 
      - 배열에서 사용하는 @,* 기호와 의미가 같으며 따옴표를 사용했을 경우에도 배열의 경우와 같다.
      - 전달받은 위치 매개변수를 다른 명령의 인수로 그대로 전달하려면 "$@"를 사용한다.

  - set 명령
    - set 명령은 shell 옵션을 설정할 때 사용하지만 위치 매개변수를 설정하거나 삭제할 떄도 사용한다.
      - 위치 매개변수 설정: set 값1 값2 값3 ... 혹은 set -- 값1 값2 값3 ...
      - 위치 매개변수 삭제: set --

  - shift 명령
    - shift {n} 명령은 현재 위치 매개변수를 좌측으로 n만큼 이동(삭제)시킨다.
    - n의 기본값은 1이다.
    - 매개변수 개수보다 n 값이 크면 삭제가 일어나지 않고 종료상태값은 1이 된다.

◎ 특별 매개변수
  - $?: 바로 이전에 실행된 종료상태 값을 나타낸다.
  - $$: 현재 쉘의 PID를 나타낸다. 이 값은 하위쉘에서도 같은 값을 가진다.
    - 부모 쉘 PID는 $PPID로 구할 수 있다.
    - 하위쉘의 PID는 $BASHBPID로 구할 수 있다. (bash 전용)
  - $!: & 메타문자를 이용해 가장 최근에 백그라운드로 실행한 PID를 나타낸다. 파이프로 연결한 명령 그룹의 경우 마지막 PID를 표시한다.
  - $_: 이전 명령에서 사용한 마지막 인수를 값으로 가진다. 사용한 인수가 없으면 명령어 이름이 된다.
  - $-: set 명령에 의해 현재 쉘에 활성화되있는 옵션 플래그를 보여준다.

◎ 환경 변수
  - 환경변수 기능은 1979년 Version 7 Unix에 처음 소개된 후에 모든 Unix OS와 Linux, MacOS, DOS, Windows 등에서 사용된다.
  - 쉘에서 특정 변수값을 설정한 후, export하게 되면 프로그램을 실행할 때, 해당 변수값이 전달되어 사용할 수 있게 된다.
  
  - 다음은 sh에서 사용하는 환경변수이다.
    - HOME: 현재 사용자 홈 디렉토리
    - PATH: 외부 명령을 실행할 때, 자동으로 검색할 디렉토리 목록이다. 앞에서부터 등록된 순서대로 찾는다. ':'로 구분하며 공백없이 붙여써야 한다.
    - PS1: Default interaction prompt이다. 프롬프트 모양을 변경하기 위해 여러 특수문자를 사용할 수 있다.
    - PS2: Continuation interactive prompt이다. 여러 줄의 명령을 입력할 때 나타난다.

    - IFS: Internal Field Seperator. 명령문에서 단어를 분리할 때 이 값이 기준이 된다.
      - read 명령으로 읽어들인 줄을 필드로 분리할 때, 매개변수 확장을 통해 array에 원소를 입력할 때도 사용한다.
      - 기본값은 space, tab, newline이며 IFS 변수가 unset됬을 때도 적용한다. IFS 변수가 null일 때는 단어분리가 일어나지 않는다.

    - CDPATH: 자주 사용하는 디렉토리. ':'로 구분하며 cd의 경로탐색과 tab키 자동완성의 경로탐색에 추가한다.
    - MAIL: $MAILPATH 변수가 설정되지 않을 때, mailbox 파일이나 maildir 디렉토리를 등록해 놓으면, 메일이 왔을 때 알려준다.
    - MAILPATH: mailbox 파일을 ':'로 분리하여 등록하면 메일이 왔을 때 알려준다.

    - OPTARG: getopts 명령에서 사용되는 변수로 현재 옵션값을 나타낸다.
    - OPTIND: getopts 명령에서 사용되는 변수로 다음에 처리할 옵션 인덱스를 나타낸다.

  - 다음은 bash에서 사용하는 환경변수이다.
    - 정보 관련
      - BASH_VERSINFO: bash 버전 정보를 나타내는 배열이다.
      - BASH_VERSION: bash 버전 정보를 나타낸다.
      - SHELL: 현재 실행 중인 쉘을 말하는 것이 아닌, /etc/passwd에 설정되어 있는 값에 따라 설정된다. xterm을 실행하거나 vim에서 shell 명령을 실행할 때 이 값을 사용한다.
      - OSTYPE: shell이 실행되는 OS 환경을 나타낸다. 자동으로 설정된다.
      - MATCHTYPE: GNU cpu-company-system format으로 시스템 정보를 나타낸다.

      - BASHPID: 해당 쉘의 실제 PID를 나타낸다. $$와 달리 subshell에서 각기 다른 값을 가진다.
      - PPID: 쉘의 부모 PID로 읽기 전용 변수이다.
      - HOSTNAME: 호스트 이름을 나타낸다.
      - HOSTTYPE: 호스트 유형을 나타낸다. (예. x86_64)
      - UID: numeric real user id로 읽기전용 변수이다. 시스템에 login했을 때 id를 말한다.
      - EUID: numeric effective user id로 읽기 전용이다. set uid 비트를 설정한 프로그램을 실행할 때 바뀌게 된다. sh에서는 사용할 수 없지만 다음 방법을 사용하면 된다.
        - <code type="shell">
          if [ "$(id -u)" != 0 ]; then
             echo "This script must be run as root" >&2
             exit 1
          fi
        - </code>
      - GROUPS: 현재 사용자가 속해있는 그룹을 나타내는 배열이다.
      
      - BASH_COMMAND: 현재 명령을 나타낸다.
      - BASH_EXECUTION_STRING: bash -c 형식으로 실행 시 사용된 명령구문을 나타낸다.
      - PIPESTATUS: 파이프로 연결된 명령을 종료했을 때, 명령의 반환값을 담고 있는 배열
      
      - OLDPWD: cd 명령을 사용할 때 바로 이전 디렉토리를 나타낸다.
      - PWD: cd 명령에 의해 현재 디렉토리 경로를 저장한다. pwd 명령 실행 결과와 같다.
      - DIRSTACK: 현재까지 방문한 디렉토리 정보를 담는 배열이다. dirs 내장 명령이 보여주는 내용과 같다.

    - 디버깅 관련
      - BASH_ARGC: 현재까지 콜스택에 있는 함수들의 인자수를 나타내는 배열이다.
      - BASH_ARGV: 현재까지 콜스택에 있는 함수들의 인자 목록을 나타내는 배열이다.
      - FUNCNAME: 현재까지 콜스택에 있는 함수들의 이름을 나타내는 배열이다.
      - BASH_SOURCE: 현재까지 콜스택에 있는 파일의 이름을 나타내는 배열이다.
      - BASH_LINENO: 현재까지 콜스택에 있는 함수의 호출행을 나타내는 배열이다. 역시나 역순이다.
      - LINENO: 변수를 참조한 곳의 줄 번호를 나타낸다. 오류 발생 시, 메세지를 출력할 때 사용하면 위치를 알 수 있다.
      - BASH_SUBSHELL: 하위 쉘의 중첩 깊이를 나타낸다.
      - SHLVL: bash 프로세스의 중첩수를 나타낸다. 하위 쉘이 아닌 하위 프로세스의 중첩수이다.
      - BASH_XTRACEFD: xtrace 메세지를 특정 파일지시자로 보낼 때 사용한다.
        - set -o xtrace 옵션을 사용해 xtrace하면 기본적으로 stderr로 출력한다.그래서 명령을 실행하다가 에러 메세지가 발생하면 둘이 섞이는 데 이를 방지할 수 있다.
      - PS4: 디버깅을 하기 위해 -x 혹은 set -o xtrace 옵션을 설정하여 스크립트를 실행하면, 명령 실행 전 매개변수에 매개변수 확장, 치환이 완료된 명령문을 보여준다. 이 때 PS4값이 설정되있으면 명령문 앞에 표시한다. 기본값은 +이다.

      - BASH_ARGC와 BASH_ARGV는 shopt -s extedebug 옵션을 설정해야 볼 수 있다.
      - 콜 스택 관련 정보의 순서는 현재 함수에서 처음으로 호출한 함수 순이다. 최근 실행한 함수의 정보가 목록의 앞에 온다.

    - 자동완성 관련
      - COMP_CWORD: 자동완성 함수에서 사용하는 변수로 명령 라인에 현재 커서가 위치한 단어의 인덱스를 나타낸다. 단어는 $COMP_WORDBREAKS 변수값에 따라 분리되고 $COMP_WORDS 배열을 이용해 단어값을 구할 수 있다.
      - COMP_LINE: 자동완성 함수에서 사용되는 변수로 현재 작성 중인 명령 라인 전체내용을 나타낸다.
      - COMP_POINT: 자동완성 함수에서 사용되는 변수로 명령 라인에서 현재 커서가 위치한 문자수 인덱스를 나타낸다. (space 포함)
      - COMP_TYPE: 자동완성 함수에서 사용하는 변수로 현재 시도된 자동완성 유형을 나타낸다.
      - COMP_KEY: 자동완성 함수에 사용하는 변수로 자동완성 시도시 사용된 키값을 나타낸다.
      - COMP_WORDBREAKDS: 자동완성 함수에서 사용하는 변수로 이 값에 따라 자동완성 단어를 분리한다. unset할 경우 기능을 상실해서 값을 재대입해도 적용되지 않는다.
      - COMP_WORDS: 자동완성 함수에서 사용하는 배열로 프롬프트에서 현재까지 입력한 명령의 인수를 배열이다.
      - COMPREPLY: 자동완성 함수에서 사용하는 배열로 여기에 있는 단어들이 tab 키를 이용해 자동완성을 시도할 때 보여진다.
      - FIGNORE: 파일 확장자를 ':'로 분리해서 등록하면 파일명 자동완성 시 제외된다.
      - HOSTFILE: /etc/hosts와 같은 포맷의 파일을 등록하면 hostname completion 시 사용된다.
      
    - 히스토리 관련
      - HISTCMD: 현재 명령의 hisotry 번호를 나타낸다.
      - HISTCONTROL: 명령 hisotry의 작동방식을 ':'로 분리해 설정할 수 있다.
        - ignorespace: space로 시작하는 명령줄은 history에 저장하지 않는다.
        - ignoredups: 이전 history 명령과 중복될 경우, 저장하지 않는다.
        - ignoreboth: ignorespace:ignoredups와 같다.
        - erasedups: 이전 모든 history 라인을 비교해 중복된 hisotry를 제거한 후 저장한다.
      - HISTFILE: history를 저장할 파일을 나타낸다. 기본값은 ~/.bash_history이다.
      - HISTFILESIZE: history 파일에 저장할 최대 라인수를 나타낸다.
      - HISTIGNORE: history 리스트에 제외할 명령패턴을 :로 분리해 등록한다.
      - HISTSIZE: history 리스트에 기억할 최대 명령수를 나타낸다. 기본값은 500이다.
      - HISTTIMEFORMAT: history 번호에 이어 시간기록을 붙일 수 있다. history 파일에도 저장된다.

    - 로케일 관련
      - LANG: LC_로 시작하는 변수로 설정하지 않은 로케일 카테고리에 대해서는 이 변수의 값이 적용된다.
      - LC_ALL: LC_*와 LANG으로 설정한 로케일값을 덮어쓴다
      - LC_COLLATE: 파일이름 확장으로 나온 목록 정렬, 동치관계와 범위 표현식의 동작 정의, 파일이름 확장과 패턴 매칭으로 나올 목록 수집 방법 정의 등과 관련된 로케일이다.
      - LC_CTYPE: 파일이름 확장과 패턴매칭과 관련된 로케일이다.
      - LC_MESSAGES: $" "를 사용한 문자열을 번역하는데 사용할 로케일이다.
      - LC_NUMERIC: 숫자 서식과 관련한 로케일이다.
      
    - READLINE 관련
      - INPUTRC: Readline 라이브러리의 설정파일을 지정할 수 있다. 기본값은 ~/.inputrc이다.
      - READLINE_LINE: 프롬프트 상의 현재 명령줄 내용을 나타낸다. bind-x용 함수 작성에 사용되는 변수로 일반 함수에서는 사용할 수 없다.
      - READLINE_POINT: 프롬프트 상에서 현재 커서가 위치한 인덱스를 나타낸다. bind -x용 함수 작성에 사용하는 변수로 일반 함수에서는 사용할 수 없다.

    - 설정 관련
      - BASHOPTS: shopt 명령으로 설정한 옵션이다. ':'로 분리되어 저장되어 있다.
      - SHELLOPTS: set 명령으로 설정한 옵션이 :로 분리되어 저장된다.

      - BASH_COMPAT: Bash compatibility level을 설정할 수 있다. 설정을 안했을 경우 현재 버전으로 설정된다.
      - CHILD_MAX: 종료한 자식 프로세스의 상태값을 얼마나 기억할 지 나타낸다.
      - FUNCNEXT: 함수가 함수를 호출할 수 있는 깊이를 설정할 수 있다. 설정한 깊이를 넘어서면 명령 실행이 중단된다.
      - BASH_ENV:  non-interactive shell을 열 때마다 실행되는 파일이다. 쉘 스크립트용 .bashrc인 셈이다.
      - ENV: BASH_ENV와 같다. shell이 POSIX 모드로 실행할 때 사용한다.
      - TMPDIR: 쉘이 사용하는 임시 디렉토리를 지정할 수 있다.

      - BASH_ALIASES: alias 명령으로 설정된 연관 배열이다.
      - BASH_CMDS: hash 내장 명령에서 사용하는 연관배열이다. 값을 추가하거나 삭제하면 동일하게 hash 테이블에 반영된다.
      - FCEDIT: fc -e 명령을 사용할 때 적용하는 기본 에디터이다.
      - GLOBIGNORE: globbing에서 사용하는 패턴을 :로 분리해 등록하면 매칭에서 제외시킨다.
      - TIMEFORMAT: time 키워드에서 결과를 출력할 때 사용하는 서식 문자열이다.
      - MAILCHECK: 메일 확인 주기를 초단위로 설정한다.
      - TMOUT: read, select 명령 사용 시 입력대기 시간을 초단위로 설정할 수 있다. 대기시간을 초과하면 입력을 중단하고 다음 명령으로 진행한다. 터미널에서 설정할 경우, 해당 시간 동안 명령 입력이 없으면 나간다.

    - 프롬프트 관련
      - PROMPT_COMMAND: PS1 프롬프르틀 표시하기 전 실행할 명령이다.
      - PROMPT_DIRTRIM: 프롬프트에서 경로를 표시할 떄 이 변수에 설정된 값만큼만 디렉토리를 표시하고 나머지는 ...로 표시한다.

    - 키워드 관련
      - COPROC: coproc 내장 명령을 사용할 때 생성되는 파일 지시자를 담는 배열이다.
      - PS3: select 문에 사용되는 프롬프트이다.
      - REPLY: read 명령을 사용할 때 값을 저장할 변수를 지정하지 않으면 이 변수에 저장된다. select 문에도 사용된다.

    - 기타
      - RANDOM: 0~32767 사이에 있는 무작위 수를 제공한다.

      - BASH_REMATCH: 정규표현식 매칭에 사용되는 변수이다.
      - MAPFILE: mapfile 명령으로 라인을 읽어들일 때 변수를 지정하지 않으면, 여기에 저장된다.
      - EMACS: 쉘을 시작할 때, 값으로 't'가 설정됬으면 emacs shell buffer에서 실행하는 것으로 간주해 명령행 편집이 비활성화된다.
      - OPTERR: getopts 명령에서 사용하는 변수로 0으로 설정하면 오류 메세지를 출력하지 않는다. 기본값은 1이며 스크립트가 실행될 때마다 새로 설정된다.
      - IGNOREEOF: set -o ignoreeof일 때 사용하는 변수로, 터미널에서 연이어 CTRL-D(EOF)을 몇번을 입력해야 나갈지 숫자를 지정한다.
      - SECONDS: shell/script의 실행을 시작한 후 경과한 시간을 초 단위로 나타낸다. 임의로 값을 입력하면 그 값부터 더해나간다.
      - COLUMNS: 현재 터미널의 열 길이를 나타낸다. select 문에 의해 사용된다.
      - LINES: 현재 터미널 라인수를 나타낸다. select 문에 의해 사용한다.

      - POSIXLY_CORRECT: export POSIXLY_CORRECT=t를 하면 bash 프로세스가 posix 모드로 실행된다. 현재 쉘도 set -o poxis한 것처럼 posix 모드로 바뀐다.
