■ 쿠키, 세션, 토큰

◎ 참조
  - <link contents="페이스북과 쿠키의 상관관계와 쿠키 기초개념" path="https://youtu.be/1emZgLiGE4s"/>
  - <link contents="세션 vs 토큰 vs 쿠키" path="https://youtu.be/tosLBcAX1vk"/>

◎ 개요
  - HTTP는 사용자를 기억하지 않는다. statless로 요청과 응답이 이루어진 다음에 연결은 끊어진다.
  - 하지만 웹 서비스는 사용자의 정보(로그인 여부, 선호하는 언어)를 기억해야할 때가 있다. 이때 사용하는 것이 쿠키, 토큰, 세션, JWT이다.
  - 쿠키/토큰/세션/JWT 4인방은 인증(Auth)을 구현하는 데도 쓰인다.

◎ 쿠키
  - 쿠키는 서버가 사용자에게 발급하는 영수증이다.
    - 사용자의 브라우저는 처음 웹사이트에 방문하면 영수증을 발급받아 보관한다.
    - 그리고 다시 웹사이트에 접속하면 발급받은 영수증을 제출하고, 서버는 사용자의 정보를 확인하고 응답한다.
  - 쿠키는 다음과 같은 규칙을 따른다.
    - 1. 하나의 쿠키는 하나의 도메인에 한정되어 있다.
    - 2. 쿠키는 자동으로 저장되고 보내진다.
  - 페이스북이 타 도메인의 쿠키를 알 수는 없지만 아래 방식으로 타 도메인의 정보를 쿠키로 얻을 수 있다.
    - 1. 누군가의 블로그에 페이스북의 좋아요 버튼이 있다. 이 버튼은 실제 페이스북의 버튼일 수도, 그냥 페이스북의 이미지일 수도 있다.
    - 2. 만약 해당 블로그에 들어가면 블로그는 버튼에 대한 요청을 페이스북에 보낸다.
    - 3. 이때 쿠키도 같이 보내지는데 이 쿠키에는 "누군가의 블로그에서 사용자(브라우저)가 우리의 좋아요 버튼을 요청한다" 라는 정보가 들어있다.
    - 4. 이 쿠키가 페이스북으로 넘어가 페이스북은 사용자가 어디로 가는지 알 수 있다.
  
◎ 세션
  - 세션은 서버가 기억하는 사용자의 데이터이다.
  - 세션 방식에서 서버는 사용자의 데이터를 서버에 저장하고 쿠키를 통해 해당 데이터의 ID를 사용자와 주고받는다.
    - 사용자가 웹사이트에 로그인하면 서버는 세션에 사용자의 정보를 넣고 세션 DB에 넣는다. DB에 저장된 세션은 ID를 가진다.
    - 세션의 ID는 쿠키를 통해 사용자에게 전달되고, 다시 요청이 생기면 서버는 쿠키에 있는 세션 ID를 보고, 세션 DB와 확인해 사용자를 식별한다.
  - 세션과 토큰의 차이점은 서버에 저장되냐, 브라우저에 저장되냐의 차이다.

◎ 토큰
  - 토큰은 서버가 서명하고 브라우저가 기억하게 하는 사용자의 데이터이다.
  - 토큰 방식에서 서버는 사용자의 데이터를 서명 알고리즘으로 서명한 토큰을 만들어 쿠키를 통해 사용자와 주고받는다.
    - 사용자가 웹사이트에 로그인하면 서버는 사용자의 정보를 서명 알고리즘으로 서명한 토큰으로 만든다.
    - 이 토큰은 쿠키를 통해 사용자에게 전달되고, 다시 요청이 생기면 서버는 쿠키에 있는 토큰을 보고 서명을 풀며 토큰이 유효한지 확인해 사용자를 식별한다.
  - 서명은 누구나 풀 수 있지만, 조작하진 못한다. 그래서 사용자를 인증하는데 쓰일 순 있지만 사용자의 중요한 정보를 저장해선 안된다.
  - 정확히는 토큰은 사실 서버가 쿠키를 통해 보내는 이상한 문자열이고, 앞서 설명한 것은 토큰의 한 종류인 JWT(Json Web Token)이다.
    - JWT는 누구나 조작하지 못한다는 특징 때문에 여러 곳에서 쓰일 수 있다.
