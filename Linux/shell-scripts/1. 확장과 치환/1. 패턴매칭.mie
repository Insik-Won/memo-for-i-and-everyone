■ 패턴 매칭

◎ 참조
  - <link path="https://mug896.github.io/bash-shell/pattern_matching.html" contents="Pattern Matching"/>

◎ 패턴 매칭
  - 정규표현식은 [[ ]] 명령에서 제한적으로 사용할 수 있지만, glob 문자(*,?,[])를 이용하는 패턴매칭은 쉘 스크립트 전반에서 사용할 수 있다.
    - 파일명 확장 (globbing)
    - case 문
    - 매개변수 확장(부분문자열 삭제, 검색, 교체)
    - [[ ]] 명령
    - 등등

◎ glob 문자의 의미
  - *: 공백을 포함해 모든 문자와 매칭한다.
  - ?: 임의의 문자 하나와 매칭한다.
  - [...]: bracket 표현식 내의 하나의 문자와 매칭한다.

◎ bracket 표현식
  - [XYZ]: X,Y,Z 중 하나의 문자와 매칭한다.
  - [X-Z]: X부터 Z까지의 문자 중 하나를 매칭한다.
  - [[:class:]]: POSIX 문자 클래스와 매칭한다.
  - [^...], [!...]: ...에 해당하지 않는 문자와 매칭한다.

◎ POSIX 문자 클래스
  - [:class:]가 POSIX 문자 클래스로 조건에 맞는 문자를 나타낸다. [[:class:]]는 bracket 표현식 안에 문자 클래스가 들어간 형태이다. 그래서 bracket 표현식 안에 여러 문자 클래스가 들어갈 수가 있다.
  - 문자 클래스의 목록은 다음과 같다.
    - [:alnum:]: [A-Za-z0-9], 알파벳 문자와 숫자
    - [:alpha:]: [A-Za-z], 알파벳 문자
    - [:upper:]: [A-Z], 알파벳 대문자
    - [:lower:]: [a-z], 알파벳 소문자
    - [:digit:]: [0-9], 숫자
    - [:xdigit:]: [0-9a-fA-F], 16진수 숫자
    - [:space:]: [ \t\n\v\f\r], 모든 공백문자
    - [:blank:]: [ \t], 띄워쓰기와 탭 문자
    - [:punct:]: [!@#$%^&*(){}[]...], 키보드에 있는 숫자, 대소문자 뺴고 모든 문자
    - [:graph:]: [!-~], 출력 가능하고 볼 수 있는 문자
    - [:print:]: [ -~], 출력 가능하고 비컨트롤 문자
    - [:cntrl:]: [\x00~\x19\x7F], 컨트롤 문자
    - ([:graph:]와 [:print:]의 차이는 띄워쓰기를 포함하고 안하고 차이)

◎ 확장 패턴
  - 확장 패턴은 bash에서만 제공하는 기능으로 prompt에서나 쉘 함수에서 기본적으로 사용할 수 있고 쉘 스크립트 파일에서는 사용할 수 없지만 shopt -s extglob 옵션으로 사용할 수가 있다.
  - 정규표현식처럼 가변 길이의 매칭이 필요할 때 유용하게 사용할 수 있다.
  - 확장 패턴의 목록은 다음과 같다.
    - ?(<PATTERN-LIST>): 주어진 패턴이 0~1번 발생하면 매칭한다.
    - *(<PATTERN-LIST>): 주어진 패턴이 0번 이상 발생하면 매칭한다.
    - +(<PATTERN-LIST>): 주어진 패턴이 1번 이상 발생하면 매칭한다.
    - @(<PATTERN-LIST>): 주어진 패턴이 1번 발생하면 매칭한다.
    - !(<PATTERN-LIST>): 주어진 패턴이 발생하지 않으면 매칭한다.
