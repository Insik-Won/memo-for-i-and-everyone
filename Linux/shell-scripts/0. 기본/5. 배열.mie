■ 배열

◎ 참조 
  - <link path="https://mug896.github.io/bash-shell/special_parameters.html" contents="Arrays"/>

◎ 쉘 스크립트의 배열
  - 쉘 스크립트에서 배열은 프로그래밍 언어에서처럼 주요 기능이 아니다. 실제 스크립트를 작성할 때도 배열은 잘 사용되지 않는다. 따라서 배열은 POSIX에서 정의되어있지 않고 sh에서도 사용할 수 없다.
  - 하지만 interactive shell에서 사용되는 bash의 경우 select문이나 사용자 정의 자동완성에서 배열이 사용된다.
  - 배열 변수는 export할 수 있다.
  
◎ 배열 만들기 및 값 넣기
  - 배열은 인덱스로 숫자를 사용하는 일반 배열과 문자열을 사용하는 연관 배열이 있다.
  - 일반 배열은 별다른 설정 없이 사용할 수 있고, 연관 배열은 declare -A 변수명으로 먼저 선언해야 한다.

  - 일반 배열은 다음과 같이 만든다.
    - <code type="shell">
      arr1=( 11, 22, 33 )
      var=2
      arr2=( [0]=11, [1]="two" [var]=22)
    - </code>
  - 연관 배열은 다음과 같이 만든다.
    - <code type="shell">
      declare -A arr3
      var=ef
      arr3=( [ab]=11, [cd]=22, [$var]=22)
    - </code>

  - 인덱스에는 매개변수 확장, 명령 치환, 산술확장을 모두 사용할 수 있다.
  - 인덱스에 변수를 사용할 때, 일반배열은 $ 없이, 연관배열은 $ 있게 사용해야 한다.
  - 일반 배열의 인덱스에 문자를 사용하면 [0]에 할당된다.

◎ 배열의 값 사용하기
  - 배열의 원소값을 사용할 때는 반드시 { }를 사용해야 한다. 만약 { }이 없다면 globbing이 일어나게 된다.
  - 일반배열의 인덱스는 기본적으로 산술연산이 가능하다.
  - 연관배열의 인덱스는 값에 공백 포함 여부에 따라 각각 다른값으로 인식한다. 인덱스에서 globbing은 일어나지 않는다.
  - 배열 변수를 인덱스 없이 사용하면 index가 [0]인 원소가 된다.
  - 배열에 원소를 추가할 떄는 +=( )를 사용할 수 있다.

◎ 배열 표현식
  - ${arr[idx]}: 해당 원소의 값을 나타낸다.
  - ${#arr[idx}: 해당 원소의 문자열 길이를 나타낸다.
  - ${arr[@]}, ${arr[*]}: 각 원소의 값을 IFS로 구분해 출력한다.
    - "${arr[@]}": 각 원소의 값을 따옴표로 묶어 출력한다.
    - "${arr[*]}": 모든 원소의 값을 따옴표로 한꺼번에 묶어 IFS로 구분해 출력한다.
    - 여기서 IFS는 IFS 변수의 첫번째 문자이다.
    - 배열 대입문도 문자열이기에 "${arr[@]}"를 배열 대입문에도 활용할 수 있다.
  - ${!arr[@]}, ${arr[*]} 각 원소의 인덱스를 IFS로 구분해 출력한다.
  - ${#arr[@]}, ${arr[*]}: 배열의 원소 개수를 나타낸다.
  - ${arr[@]:offset:length}: 배열의 offset번쨰 원소부터 length개의 원소를 뽑아낸다.
